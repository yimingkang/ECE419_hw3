import java.util.concurrent.BlockingQueue;

public class SafeSocketSenderThread implements Runnable {
	public int sequenceNumber=1;
	public int currentAck=0;
	public MSocket mSocket;
	public BlockingQueue<MPacket> packetQueue;
	
	public SafeSocketSenderThread(MSocket socket, BlockingQueue<MPacket> packets){
		this.mSocket = socket;
		this.packetQueue = packets;
	}
	
	
    public void run() {
        MPacket toServer = null;
        while(true){
            try{                
                //Take packet from queue
                toServer = (MPacket) this.packetQueue.take();
                toServer.sequenceNumber = this.sequenceNumber;
            	while (this.currentAck != this.sequenceNumber){
                    mSocket.writeObject(toServer);
            	}
            	this.sequenceNumber++;
            }catch(InterruptedException e){
                e.printStackTrace();
                Thread.currentThread().interrupt();    
            }
            
        }
    }
	
	public void updateAck(int ackNum){
		this.currentAck = Math.max(ackNum, this.currentAck);
	}

}
